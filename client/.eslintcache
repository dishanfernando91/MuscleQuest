[{"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\index.js":"1","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\App.js":"2","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\EditMember.js":"3","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\CreateMember.js":"5","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\MemberList.js":"6","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\CreatePayment.js":"7","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\MemberDetail.js":"8","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\PaymentHistory.js":"9","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\packages\\CreatePackage.js":"10","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\Member.js":"11","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\PaymentTable.js":"12","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\UnpaidTracker.js":"13","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\packages\\PackageDetails.js":"14","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\Payments.js":"15"},{"size":149,"mtime":1607948928987,"results":"16","hashOfConfig":"17"},{"size":1341,"mtime":1607949345386,"results":"18","hashOfConfig":"17"},{"size":8755,"mtime":1608356138119,"results":"19","hashOfConfig":"17"},{"size":1686,"mtime":1607963656972,"results":"20","hashOfConfig":"17"},{"size":5861,"mtime":1608548118469,"results":"21","hashOfConfig":"17"},{"size":1932,"mtime":1608560672101,"results":"22","hashOfConfig":"17"},{"size":5737,"mtime":1608533191263,"results":"23","hashOfConfig":"17"},{"size":2334,"mtime":1608354232539,"results":"24","hashOfConfig":"17"},{"size":8050,"mtime":1608544684732,"results":"25","hashOfConfig":"17"},{"size":2308,"mtime":1607957852762,"results":"26","hashOfConfig":"17"},{"size":926,"mtime":1608548532712,"results":"27","hashOfConfig":"17"},{"size":952,"mtime":1607951245243,"results":"28","hashOfConfig":"17"},{"size":281,"mtime":1608544466570,"results":"29","hashOfConfig":"17"},{"size":628,"mtime":1607949103124,"results":"30","hashOfConfig":"17"},{"size":368,"mtime":1608532481597,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1nwxxvh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\index.js",[],["68","69"],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\App.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\EditMember.js",["70","71"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { FaUser, FaRegAddressBook, FaBirthdayCake, FaWeight, FaPercentage } from \"react-icons/fa\";\r\nimport { AiFillPhone, AiOutlineColumnHeight  } from \"react-icons/ai\";\r\nimport { GiEncirclement } from \"react-icons/gi\";\r\n\r\n\r\nexport default function EditMember(props) {\r\n\r\n    const [date, setDate] = useState(null);\r\n    const [member, setMember] = useState({\r\n        memberId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        gender: '', \r\n        address: '',\r\n        phoneNumber: '',\r\n        features: {\r\n            height: '',\r\n            weight:'',\r\n            bodyFat:'',\r\n            waist:''\r\n        }\r\n    })\r\n    \r\n    const onChangeDate = date => {\r\n        setDate(date)\r\n    }\r\n\r\n    const handleRadioChange = e => {\r\n        setMember({...member, gender: e.target.value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/members/${props.match.params.id}`)\r\n            .then(res => {\r\n                setMember({\r\n                    memberId: res.data.memberId,\r\n                    firstName: res.data.firstName,\r\n                    lastName: res.data.lastName,\r\n                    address: res.data.address,\r\n                    phoneNumber: res.data.phoneNumber,\r\n                    gender: res.data.gender,\r\n                    features: {\r\n                        height: res.data.features.height,\r\n                        weight: res.data.features.weight,\r\n                        bodyFat: res.data.features.bodyFat,\r\n                        waist: res.data.features.waist,\r\n                    }\r\n                });\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/members/${props.match.params.id}`)\r\n            .then(res => {\r\n                setDate(Date.parse(res.data.dateOfBirth));\r\n            })\r\n    }, []);\r\n\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const onSubmitData = data => {\r\n        const updatedMember = {\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            dateOfBirth: date,\r\n            address: data.address,\r\n            phoneNumber: data.phoneNumber,\r\n            gender: data.gender,\r\n            features: {\r\n                height: data.features.height,\r\n                weight: data.features.weight,\r\n                bodyFat: data.features.bodyFat,\r\n                waist: data.features.bodyFat\r\n            }\r\n        } \r\n        axios.post(`/api/members/update/${props.match.params.id}`, updatedMember)\r\n            .then(res => console.log(res.data))\r\n\r\n        // window.location = '/show/';\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <form onSubmit  ={handleSubmit(onSubmitData)}>\r\n                <input \r\n                    disabled=\"disabled\"\r\n                    className=\"form-control member-id\"\r\n                    type=\"text\" \r\n                    name=\"memberId\" \r\n                    defaultValue={member.memberId}\r\n                    placeholder=\"ID\" \r\n                    ref={register}\r\n                />\r\n                <div className=\"input-container\">\r\n                    <FaUser size={20} className=\"icon\"/>\r\n                    <input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"firstName\" \r\n                        defaultValue={member.firstName}\r\n                        placeholder=\"First name\" \r\n                        ref={register} \r\n                    />\r\n                    <input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"lastName\" \r\n                        defaultValue={member.lastName}\r\n                        placeholder=\"Last name\" \r\n                        ref={register} \r\n                    />\r\n                </div>\r\n\r\n                <br/>\r\n                <div className=\"input-gender\">\r\n                    <span id=\"male\">Male</span>\r\n                    <input \r\n                        type=\"radio\" \r\n                        value=\"Male\" \r\n                        name=\"gender\"\r\n                        ref={register}\r\n                        checked = {member.gender === \"Male\" ? true : false}\r\n                        onChange = {handleRadioChange}\r\n                    /> \r\n                    <span id=\"female\">Female</span> \r\n                        <input \r\n                        type=\"radio\" \r\n                        value=\"Female\" \r\n                        name=\"gender\" \r\n                        ref={register} \r\n                        checked = {member.gender === \"Female\" ? true : false}\r\n                        onChange = {handleRadioChange}\r\n                    /> \r\n                </div>\r\n                \r\n                <br/>\r\n                <div className=\"input-add\">\r\n                    <FaRegAddressBook size={24} className=\"add-icon\" />\r\n                    <input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"address\" \r\n                        placeholder=\"Address\" \r\n                        ref={register}\r\n                        defaultValue={member.address}\r\n                    />\r\n                </div>\r\n              \r\n                <br/>\r\n                <div className=\"input-phone\">\r\n                    <AiFillPhone size={22} className=\"phone-icon\"/>\r\n                    <input \r\n                        className=\"form-control\" \r\n                        type=\"text\" \r\n                        name=\"phoneNumber\" \r\n                        placeholder=\"Phone Number\" \r\n                        ref={register} \r\n                        defaultValue={member.phoneNumber}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className=\"input-bod\">\r\n                    <FaBirthdayCake size={18}  className=\"bod-icon\"/>\r\n                    <DatePicker\r\n                        selected = {date}\r\n                        onChange = {onChangeDate} \r\n                        placeholderText=\"Select date\"   \r\n                    />\r\n                </div>\r\n                <div className=\"features-group\">\r\n                    <h6>Features: </h6>\r\n                    <div className=\"features-input\">\r\n                        <div>\r\n                            <AiOutlineColumnHeight className=\"features-icon\" size={16} />\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Height\" \r\n                                name=\"features.height\" \r\n                                ref={register}\r\n                                defaultValue={member.features.height}\r\n                            />cm\r\n                        </div>\r\n                        <div>\r\n                            <FaWeight className=\"features-icon\" size={14} />\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Weight\" \r\n                                name=\"features.weight\" \r\n                                ref={register}\r\n                                defaultValue={member.features.weight}\r\n                            />kg\r\n                        </div>\r\n                        <div>\r\n                            <FaPercentage className=\"features-icon\" size={14} />\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Body Fat Percentage\" \r\n                                name=\"features.bodyFat\" \r\n                                ref={register}\r\n                                defaultValue={member.features.bodyFat}\r\n                            />%\r\n                        </div>\r\n                        <div>\r\n                            <GiEncirclement className=\"features-icon\" size={14} />\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Waist\" \r\n                                name=\"features.waist\" \r\n                                ref={register}\r\n                                defaultValue={member.features.waist}\r\n                            />cm\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"subBtn\">\r\n                    <button type=\"submit\" className=\"submit-form\">Edit Log</button>\r\n                </div>\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\CreateMember.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\MemberList.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\CreatePayment.js",["72"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Select from 'react-select';\r\n\r\nexport default function CreatePayment() {\r\n\r\n    const { handleSubmit, control } = useForm();\r\n    const [packages, setPackages] = useState([])\r\n    const [allPayments, setAllPayments] = useState({});\r\n    const [members, setMembers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/packages/')\r\n        .then(res => {\r\n            setPackages(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/members/')\r\n        .then(res => {\r\n            setMembers(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/payments/')\r\n        .then(res => {\r\n            setAllPayments(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    // React Select Options\r\n    const memberOptions = members.map(member => {\r\n       return {value: member, label: `${member.firstName} ${member.lastName}`}\r\n    })\r\n\r\n    const memberIdOptions = members.map(member => {\r\n        return {value: member.memberId, label: `${member.memberId}`}\r\n    })\r\n\r\n    //package --> gymPackage, package is reserved\r\n    const packageOptions = packages.filter(gymPackage => gymPackage.status).map(gymPackage => {\r\n           return {value: gymPackage, label: gymPackage.title} \r\n    });\r\n\r\n    \r\n   \r\n    const months = [    \r\n        {value: \"January\", label: \"January\"},\r\n        {value: \"February\", label: \"February\"},\r\n        {value: \"March\", label: \"March\"},\r\n        {value: \"April\", label: \"April\"},\r\n        {value: \"May\", label: \"May\"},\r\n        {value: \"June\", label: \"June\"},\r\n        {value: \"July\", label: \"July\"},\r\n        {value: \"August\", label: \"August\"},\r\n        {value: \"September\", label: \"September\"},\r\n        {value: \"October\", label: \"October\"},\r\n        {value: \"November\", label: \"November\"},\r\n        {value: \"December\", label: \"December\"}\r\n        ];\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    const currentMonth = new Date().toLocaleDateString('default', {month: 'long'});\r\n\r\n    const onSubmitData = data => {\r\n\r\n        const lastEntry = allPayments[allPayments.length - 1]\r\n        const allMonths = allPayments.map(record => record.month)\r\n        const allYears = allPayments.map(record => record.year)\r\n\r\n        const diffMonth = newMonth => {\r\n            for(let i = 0; i < allPayments.length; i++){\r\n                if(((allPayments[i].year).toString() === currentYear.toString()) && ((allPayments[i].month).toString()) === newMonth.toString())\r\n                    return allPayments[i]._id \r\n            }\r\n        }\r\n\r\n        const payment = {   \r\n            month: data.months.value,\r\n            payments: {\r\n                memberID: data.member.value._id,\r\n                package: data.gymPackage.value._id\r\n            }\r\n        }\r\n        \r\n        if(allPayments.length === 0){\r\n            axios.post('/api/payments/add', payment)\r\n                .then(res => console.log(res.data))    \r\n\r\n        } else if(currentMonth === lastEntry.month && currentYear === lastEntry.year) {\r\n            axios.put(`/api/payments/update/${lastEntry._id}`, payment)\r\n                .then(res => console.log(res.data))    \r\n\r\n        } else if(allMonths.includes(data.months.value) && allYears.includes(currentYear.toString())){\r\n            axios.put(`/api/payments/update/${diffMonth(data.months.value)}`, payment)\r\n               .then(res => console.log(res.data))   \r\n\r\n        } else {\r\n            axios.post('/api/payments/add', payment)\r\n                .then(res => console.log(res.data))\r\n        }\r\n        \r\n        window.location.reload(false);\r\n    }  \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"pyt-head\">Payment Selection</h3>\r\n        <div className=\"pyt-container\">\r\n            <div className=\"pyt-form\">\r\n                <form onSubmit={handleSubmit(onSubmitData)}>\r\n                {/* <Controller\r\n                    as={<Select\r\n                        options={memberIdOptions} />}\r\n                    name=\"memberId\"\r\n                    control={control}\r\n                    placeholder=\"Member ID\"\r\n                    className=\"pyt-selector\"\r\n                /> */}\r\n                <Controller\r\n                    as={<Select \r\n                        options={months}/>}\r\n                    name=\"months\"\r\n                    control={control}\r\n                    isSearchable\r\n                    defaultValue={{ value: currentMonth, label: currentMonth }}\r\n                    className=\"pyt-selector\"\r\n                />\r\n                <Controller\r\n                    as={<Select options={memberOptions}/>}\r\n                    name=\"member\"\r\n                    control={control}\r\n                    isSearchable\r\n                    placeholder=\"Enter Name\"\r\n                    className=\"pyt-selector\"\r\n                />\r\n                <Controller\r\n                    as={<Select options={packageOptions}/>}\r\n                    name=\"gymPackage\"\r\n                    control={control}\r\n                    isSearchable\r\n                    placeholder=\"Package\"\r\n                    className=\"pyt-selector\"\r\n                />\r\n                <input type=\"submit\" className=\"pyt-form-btn\"/>\r\n                </form>\r\n            </div>\r\n            <div className=\"pyt-history-link\">\r\n                <Link className=\"pyt-history-text\" to={`/payments/history`}>View Payment History</Link>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\MemberDetail.js",["73"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport noImage from '../../images/no-image-available.jpg'\r\nimport axios from 'axios'\r\n\r\nexport default function MemberDetail(props) {\r\n\r\n    const [member, setMember] = useState({});\r\n    const [features, setFeatures] = useState({});\r\n    const { firstName, lastName, address, phoneNumber, gender } = member;\r\n    const [members, setMembers] = useState([])\r\n    \r\n    useEffect(() => {\r\n        axios.get(`/api/members/${props.match.params.id}`)\r\n           .then(res => {\r\n               setMember(res.data)\r\n               setFeatures(res.data.features)}\r\n            )}, [])\r\n            \r\n\r\n    useEffect(() => {\r\n        axios.get('/api/members')\r\n        .then(res => {\r\n            setMembers(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n    \r\n      //Delete Member functionality\r\n    function deleteMember(id) {\r\n        axios.delete(`/api/members/${id}`)\r\n            .then(response => { console.log(response.data)});\r\n\r\n        setMembers(members.filter(el => el._id !== id))\r\n\r\n        window.location = '/';\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"member-card\" >\r\n            <div className=\"card-header\">\r\n                <h3>{firstName} {lastName} - {gender}</h3>\r\n                <div className=\"buttons\">\r\n                    <button><Link to={`/edit/${member._id}`}>Edit</Link></button> <span>|</span>\r\n                    <button onClick={() => deleteMember(member._id)}>Delete</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-details\">\r\n                <div className=\"img-container\">\r\n                    <img src={noImage} alt=\"No pic added\"/>\r\n                </div>\r\n                <div className=\"features\">\r\n                    <h6>Features:</h6>\r\n                    <p>Height: {features.height}cm</p>\r\n                    <p>Weight: {features.weight}KG</p>\r\n                    <p>Body Fat Percentage: {features.bodyFat}%</p>\r\n                    <p>Waist: {features.waist}cm</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"contact-info\">\r\n                <h6>Address: {address} </h6>\r\n                <h6>Contact: {phoneNumber}</h6>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\PaymentHistory.js",["74","75","76","77","78","79"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport PaymentTable from './PaymentTable';\r\nimport UnpaidTracker from './UnpaidTracker';\r\n\r\nexport default function PaymentHistory() {\r\n\r\n    const [allPayments, setAllPayments] = useState([]);\r\n    const [allPackages, setAllPackages] = useState([]);\r\n    const [allMembers, setAllMembers] = useState([])\r\n\r\n    const [viewAll, setViewAll] = useState(false);\r\n    const [selectedMonths, setSelectedMonths] = useState([]);\r\n    const [selectedYears, setSelectedYears] = useState([]);\r\n\r\n    const [paymentObjects, setPaymentObjects] = useState([]);\r\n    const [unpaidMembers, setUnpaidMembers] = useState([]);\r\n     \r\n    useEffect(() => {\r\n        axios.get('/api/payments')\r\n        .then(res => {\r\n            setAllPayments(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        axios.get('/api/packages')\r\n        .then(res => {\r\n            setAllPackages(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        axios.get('/api/members')\r\n        .then(res => {\r\n            setAllMembers(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    //Generate unique years to display in select option...\r\n    const yearRange = () => {\r\n        const years = [];\r\n        for(let i = 0; i < allPayments.length; i++) {\r\n            years.push(Number(allPayments[i].year))\r\n        }\r\n        return years;\r\n    }   \r\n    const distinctYears = [...new Set(yearRange())];\r\n    const yearOptions = distinctYears.map(year => {\r\n        return {value: year, label: year}\r\n    })\r\n\r\n    //Generate unique months to display in select option...\r\n    const monthRange = () => {\r\n        const months = [];\r\n        for(let i = 0; i < allPayments.length; i++) {\r\n            months.push(allPayments[i].month)\r\n        }\r\n        return months;\r\n    }\r\n    const distinctMonths = [...new Set(monthRange())];\r\n\r\n    //---Sort generated set of unique months in chronological order---\r\n    const sortByMonth = arr => {\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n                    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        return arr.sort(function(a, b){\r\n            return (months.indexOf(a) - months.indexOf(b));\r\n        });\r\n      }\r\n    const sortedMonth = sortByMonth(distinctMonths);\r\n    const monthOptions = sortedMonth.map(month => {\r\n        return {value: month, label: month}\r\n    })\r\n\r\n\r\n    //handle event listeners functions.\r\n    const handleChange = () => {\r\n        setViewAll(!viewAll)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(viewAll){\r\n            let viewAllPayments = [];\r\n            let viewAllPackages = [];\r\n            let viewAllDates = [];\r\n\r\n            for(let i = 0; i < allPayments.length; i++){\r\n                for(let j = 0; j < (allPayments[i].payments).length; j++){\r\n                    viewAllPayments.push(allPayments[i].payments[j].memberID);\r\n                    viewAllPackages.push(allPayments[i].payments[j].package);\r\n                    viewAllDates.push(allPayments[i].payments[j].Date.slice(5, 10));\r\n                }\r\n            }\r\n            \r\n           const paymentObjects = viewAllPayments.map((element, index) => {\r\n                const member = allMembers.find(member => member._id == viewAllPayments[index]);\r\n                const pkg = allPackages.find(packages => packages._id == viewAllPackages[index]);\r\n\r\n                return {\r\n                    name: `${member.firstName} ${member.lastName}`,\r\n                    packages: `${pkg.title} - Rs.${pkg.fee} ${!pkg.status ? \"(Inactive)\" : \"\"}`,\r\n                    date: viewAllDates[index]\r\n                }\r\n            });\r\n            setPaymentObjects(paymentObjects);\r\n            setUnpaidMembers([])\r\n\r\n        } else {\r\n            let selectedPayments = [];\r\n            let selectedPackages = [];\r\n            let selectedDates = [];\r\n            let unpaid = [];\r\n\r\n            for(let i = 0; i < allPayments.length; i++){\r\n                if(allPayments[i].year == selectedYears.value && allPayments[i].month == selectedMonths.value){\r\n                    selectedPayments = allPayments[i].payments.map(payment => payment.memberID)\r\n                    selectedPackages = allPayments[i].payments.map(payment => payment.package)\r\n                    selectedDates = allPayments[i].payments.map(payment => payment.Date.slice(5, 10))\r\n                }   \r\n            }\r\n           \r\n            const paymentObjects = selectedPayments.map((element, index) => {\r\n                const member = allMembers.find(member => member._id == selectedPayments[index]);\r\n                const pkg = allPackages.find(packages => packages._id == selectedPackages[index]);\r\n\r\n                return {\r\n                    memberId: `${member.memberId}`,\r\n                    name: `${member.firstName} ${member.lastName}`,\r\n                    packages: `${pkg.title} - Rs.${pkg.fee} ${!pkg.status ? \"(Inactive)\" : \"\"}`,\r\n                    date: selectedDates[index]\r\n                }\r\n            });\r\n            setPaymentObjects(paymentObjects);\r\n\r\n            // Extract members from all members who has not paid for the queried period and create object.\r\n            unpaid = allMembers.filter(member => !selectedPayments.includes(member._id) )\r\n            const unpaidMembers = unpaid.map(member => {\r\n               return ({\r\n                   memberId: `${member.memberId}`,\r\n                   name: `${member.firstName} ${member.lastName}`,\r\n                   status: member.status\r\n               })\r\n           });\r\n           setUnpaidMembers(unpaidMembers);\r\n            }\r\n        }\r\n\r\n        //Pending Payments Tracking\r\n        const pendingPayments = () => unpaidMembers.map(member => {\r\n            return <UnpaidTracker member={member} />\r\n        })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pyt-history-form\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"checkbox\" onChange={() => handleChange()} checked={viewAll} /><label className=\"view-all-label\">View All</label>\r\n                    <div className=\"view_options\" \r\n                    style = { viewAll ? {pointerEvents: \"none\", opacity: \"0.5\"} : {}}>\r\n                        <div className=\"pyt-history-selects\">\r\n                        <Select \r\n                            options={yearOptions}\r\n                            name=\"year\"\r\n                            placeholder=\"Select Year\"\r\n                            isSearchable\r\n                            // isMulti\r\n                            onChange={setSelectedYears}\r\n                        />\r\n                        <br/>\r\n                        <Select \r\n                            options={monthOptions}\r\n                            name=\"month\"\r\n                            placeholder=\"Select Month\"\r\n                            isSearchable\r\n                            // isMulti\r\n                            onChange={setSelectedMonths}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Search\" className=\"pyt-form-btn\" style = { (selectedMonths.length === 0 || selectedYears.length === 0) ? {pointerEvents: \"none\", opacity: \"0.5\"} : {}}/>\r\n                </form>\r\n            </div>\r\n            <div className=\"pyt-results\">\r\n                <div>\r\n                    {paymentObjects.length !== 0 ? <PaymentTable paymentObjects={paymentObjects}/> : <div></div>}\r\n                </div>\r\n                {unpaidMembers.length !== 0 ? \r\n                    <div className=\"pyt-pending\">\r\n                        <h6 style={{textAlign: \"center\", fontSize: \"14px\"}}>Pending Payments</h6>\r\n                        {pendingPayments()}\r\n                    </div>\r\n                : <></>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\packages\\CreatePackage.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\members\\Member.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\PaymentTable.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\UnpaidTracker.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\packages\\PackageDetails.js",[],"C:\\Users\\hp\\Documents\\React Apps\\MuscleQuest\\client\\src\\components\\payments\\Payments.js",[],["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":56,"column":8,"nodeType":"88","endLine":56,"endColumn":10,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"87","line":63,"column":8,"nodeType":"88","endLine":63,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":43,"column":11,"nodeType":"93","messageId":"94","endLine":43,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":18,"column":17,"nodeType":"88","endLine":18,"endColumn":19,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":99,"column":69,"nodeType":"98","messageId":"99","endLine":99,"endColumn":71},{"ruleId":"96","severity":1,"message":"97","line":100,"column":71,"nodeType":"98","messageId":"99","endLine":100,"endColumn":73},{"ruleId":"96","severity":1,"message":"97","line":118,"column":40,"nodeType":"98","messageId":"99","endLine":118,"endColumn":42},{"ruleId":"96","severity":1,"message":"97","line":118,"column":87,"nodeType":"98","messageId":"99","endLine":118,"endColumn":89},{"ruleId":"96","severity":1,"message":"97","line":126,"column":69,"nodeType":"98","messageId":"99","endLine":126,"endColumn":71},{"ruleId":"96","severity":1,"message":"97","line":127,"column":71,"nodeType":"98","messageId":"99","endLine":127,"endColumn":73},{"ruleId":"82","replacedBy":"100"},{"ruleId":"84","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["104"],["105"],"no-unused-vars","'memberIdOptions' is assigned a value but never used.","Identifier","unusedVar",["106"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["102"],["103"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"107","fix":"109"},{"desc":"107","fix":"110"},"Update the dependencies array to be: [props.match.params.id]",{"range":"111","text":"112"},{"range":"113","text":"112"},{"range":"114","text":"112"},[1817,1819],"[props.match.params.id]",[2018,2020],[668,670]]